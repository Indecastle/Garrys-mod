--@name Doctor Strange portal particle
--@author
--@client


local maxRadius = 50
local radiusVel = 0.5
local angVel = 0.4
local spread = 10

local startFor = 2
local maxFor = 20

-------------------------------------------------

--if player() ~= owner() then return end

local emitter = nil;
local degree = 9999
local radK = 0;
local radius = 0
local radiusMove = -1


--local m = material.load("effects/spark")
local m = material.create("UnlitGeneric")
m:setTexture("$basetexture","effects/spark") -- effects/spark

local VertexAlpha= true
local VertexColor= true
local AlphaTest= false
local Additive= true
local Translucent= false

local flags = 
    (VertexColor and 16 or 0) +
    (VertexAlpha and 32 or 0) +
    (Additive and 128 or 0) +
    (AlphaTest and 256 or 0) +
    (Translucent and 2097152 or 0)

if flags ~= 0 then
    m:setInt("$flags",  
        flags)    
end

local holoScaleK = 23
local holo = holograms.create(chip():localToWorld(Vector(0,0,maxRadius+10)), chip():getAngles() + Angle(90,0,0), "models/hunter/plates/plate1x1.mdl", Vector(1))
holo:setMaterial("models/props_c17/fisheyelens")
holo:setColor(Color(255,255,255,255))
holo:setParent(chip())
--holo:setClip(1, true, holo:getPos(), Vector(0,0,0))

/*
for i=1, 8 do
    local x =  maxRadius * math.cos(math.rad((i-1) * 360 / 8))
    local y = -maxRadius * math.sin(math.rad((i-1) * 360 / 8))
    local localPos = Vector(0, x, y)
    local worldPos = chip():localToWorld(Vector(0,0,maxRadius+10) + localPos)
    local worldCenterPos = chip():localToWorld(Vector(0,0,maxRadius+10))
    local localPos = chip():worldToLocal(worldPos)
    local dir = (worldPos - worldCenterPos):getNormalized()
    holo:setClip(i, true, localPos, -dir, chip())
end
*/

function portal()
    local x =  radius * math.cos(degree)
    local y = -radius * math.sin(degree)
    local localPos = Vector(0, x, y)
    local pos = chip():localToWorld(Vector(0,0,maxRadius+10) + localPos)
    --local vel, velAng = localToWorld(localPos, Angle(),
    --        Vector(), chip():getAngles() + Angle(0,0,-90))
            
    --vel, velAng = localToWorld(Vector(0,1,0), Angle(),
    --        vel, chip():getAngles() + Angle(0,0,-90))
    
    local quat0 = chip():getAngles():getQuaternion()
    local quat1 = Vector(1,0,0):getQuaternionFromAxis( -degree / math.pi * 180 )
    local quat2 = Vector(0,1,0):getQuaternionFromAxis( 90 )
    local quat3 = Vector(0,1,0):getQuaternionFromAxis( math.random(-spread, spread) )
    local quat4 = quat0 * quat1 * quat2 * quat3
    velAng = quat4:getEulerAngle()
    
    local part = emitter:add( m, pos, 2+8*radK, 0, 1+20*radK, 5+20*radK, 255, 0, 0.5 ) -- Create a new particle at pos
    if ( part ) then
        part:setCollide(true)
        --part:setBounce(1)
        part:setColor(Color(255,math.rand(0,255),0))
        --part:setGravity( Vector( 0, 0, -20 ) ) -- Gravity of the particle
        part:setVelocity( velAng:getForward():getNormalized() * (100 * radK + 40) ) -- Initial velocity of the particle
    end
end

function startPortal()
    if (emitter) then emitter:destroy() end
    emitter = particle.create(Vector(), false) -- Particle emitter in this position
    
    for i=0, (startFor + maxFor*radK) do
        degree = (degree + angVel + math.rand(0,0.5))
        if degree > (2*math.pi) then
            degree = degree % (2*math.pi)
            
        end
        
        portal()
    end
    --emitter:destroy()
end

timer.create("rain", 0.05, 0, function()
--hook.add("think", "", function()
    if radius <= 0 then return end
    startPortal()
end)


hook.add("think", "", function()
    radius = radius + radiusMove * radiusVel
    if radius > maxRadius then radius = maxRadius end
    if radius < 0 then radius = 0 end
    radK = radius / maxRadius
    
    local m = Matrix()
    holo:setScale(Vector(radK*maxRadius/holoScaleK, radK*maxRadius/holoScaleK, 0.01))
    --holo:setRenderMatrix(m)
end)



hook.add("inputPressed", "kk", function(button)
    if button == MOUSE.MOUSE1 then          
        radiusMove = 1
    end
end)

hook.add("inputReleased", "kk", function(button)
    if button == MOUSE.MOUSE1 then          
        radiusMove = -1
    end
end)
