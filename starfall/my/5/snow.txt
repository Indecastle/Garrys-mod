--@name Snow
--@author
--@client


local Target = player()
--Target = find.playersByName("Markiz")[1]
--print(Target)


local maxRadius = 1000
local forMax = 2
local spawnDelay = 0.1
local startZ = 300

local enableSound = false
local volume = 5
local dieTime = 15

local soundUrl = "https://cdn.discordapp.com/attachments/974678227362660395/974678348343148584/f969747680e8276.mp3" -- https://zvukipro.com/index.php?do=download&id=11782
soundUrl = "https://cdn.discordapp.com/attachments/974678227362660395/974678348645146684/28f2bf70e8d0701.mp3" -- https://zvukipro.com/index.php?do=download&id=11777

-------------------------------------------------

--if player() ~= Target then return end

local emitter = nil
local sound = nil
local parts = {}
local eyeAngle = Angle()


-------------------
--local m = material.load("effects/tp_eyefx/tpeye")
local m = material.create("UnlitGeneric")
m:setTexture("$basetexture","effects/flashlight/soft") -- effects/spark

local VertexAlpha= true
local VertexColor= true
local AlphaTest= false
local Additive= true
local Translucent= false

local flags = 
    (VertexColor and 16 or 0) +
    (VertexAlpha and 32 or 0) +
    (Additive and 128 or 0) +
    (AlphaTest and 256 or 0) +
    (Translucent and 2097152 or 0)
    
    
if flags ~= 0 then
    m:setInt("$flags",  
        flags)    
end
m:recompute()
-------------------


if enableSound then
    bass.loadURL(soundUrl, "3d noblock noplay", function(snd)
        if snd then
            sound = snd
            sound:setLooping(true)
            sound:setVolume(volume)
            sound:play()
        end
    end)
end


function rain(radius, degree)
    local x =  radius * math.cos(degree)
    local y = -radius * math.sin(degree)
    local pos = Target:getPos() + Vector(x, y, startZ)
    
    -- (Material material, Vector position, number startSize, number endSize, number startLength, number endLength, number startAlpha, number endAlpha, number dieTime)
    local part = emitter:add( m, pos, 5, 0, 0, 0, 0, 255, dieTime ) -- Create a new particle at pos
    if ( part ) then
        table.insert(parts, 1, {p=part, t=timer.curtime()+dieTime})
        part:setCollide(true)
        part:setBounce(0)
        --part:setColor(Color(0,math.rand(150,200),255))
        part:setGravity( Vector( 0, 0, 0 ) ) -- Gravity of the particle
        part:setVelocity( Vector(0, 0, -70) ) -- Initial velocity of the particle
        part:setAngles(eyeAngle)
    end
end

function startRain()
    if (emitter) then emitter:destroy() end
    emitter = particle.create(Vector(), true)
    emitter:setNoDraw(false)
    
    for i=0, forMax do
        local radius, degree = math.rand(0, maxRadius), math.rand(0, 360)
        rain(radius, degree)
    end
    --emitter:destroy()
end

timer.create("rain", spawnDelay, 0, function()
--hook.add("think", "", function()
    startRain()
end)

--hook.add("tick", "", function()
timer.create("updateAng", 0.2, 0, function()
    --local angles = player():localToWorldAngles(Angle(0,180,0) + BaseAngle) --eyeAngles() + Angle(0,180,0)
    local time = timer.curtime()
    local pos = eyePos()
    eyeAngle = (-eyeVector()):getAngle() + Angle(0,0,-90)
    
    for i, d in ipairs(parts) do
        if d.t > time then
            d.p:setAngles(eyeAngle)
        else
            table.removeByValue(parts, d)
        end
    end
    --print(#parts)
    
    if enableSound and sound then
        sound:setPos(Target:getPos())
    end
end)



hook.add("Removed", "anim", function()
    local color = Color(0,0,0)
    for i, d in ipairs(parts) do
        d.p:setColor(color)
        d.p:setAngles(Angle(90,0,0))
    end
    emitter:destroy()
end)

