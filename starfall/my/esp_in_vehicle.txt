--@name ESP In Vehicle

--@shared

local Radius = 10000
local OnlyMap = false
local BoxSize = 5

-------------------------------------------

local _o = owner()

if SERVER then
    
    timer.create("check_players", 1, 0, function()
        local players = find.allPlayers(function(ent)
            return !ent:hasGodMode()
        end)
        
        net.start("conecting_players")
        net.writeTable(players)
        net.send()
    end)
    
    return
end

local _validPlayers = {}
local _resultPlayers = {}

net.receive("conecting_players", function (len)
    _validPlayers = net.readTable()
end)

local _p = player()
--local _p = find.playersByName("freedom")[1]
--print(_p)
local _isOwner = _p == _o

function isProp(ent)
    return ent:getClass() == 'prop_physics'
end

local _mask = OnlyMap and MASK.VISIBLE or MASK.ALL
local _ignoreEnts = !OnlyMap and isProp or nil


local font = render.createFont("Arial" // font
                                ,19 // size
                                ,2000 // weight
                                ,false // antialias
                                ,false // additive
                                ,true // shadow
                                ,true // outline
                                ,false // blur
                                ,false //extended
                                )

function table.filter(t, func)
    local maped = {}
    local j = 1
    for i=1, #t do
        if func(t[i]) then
            maped[j] = t[i]
            j = j + 1
        end
    end
    return maped
end



function isEntityVisible(targetEnt)
    local eyePos = _p:getEyePos()
    local targetPos = targetEnt:obbCenterW()
    local dir = (targetPos - eyePos):getNormalized()
    
    
    local tr = trace.line(eyePos, eyePos + dir*Radius, _ignoreEnts, _mask, nil, false)
    local dist = eyePos:getDistance(tr.HitPos)
    if isValid(tr.Entity) then
        --printConsole(tr.Entity)
    end
    
    if tr.Entity == targetEnt then
        return true
    end
    
    local pos2 = trace.intersectRayWithOBB(eyePos, dir*dist, targetPos, Angle(), Vector(-50,-50,-50), Vector(50,50,50))
    
    local boxMin = Vector(0, 0, 0)
    local boxMax = Vector(100, 100, 100)

    return !!pos2
end

timer.create("", 0.4, 0, function()
    if not render.isHUDActive() or not _p:inVehicle() then return end
    
    _resultPlayers = table.filter(_validPlayers, function(ent)
        if !isValid(ent) then return false end
        if ent:inVehicle() then
            ent = ent:getVehicle()
        end
        return isEntityVisible(ent)
    end)
end)                  


hook.add("drawhud","myshook",function()
    if !isValid(_p) or not _p:inVehicle() then return end
    
    for i, p in ipairs(_resultPlayers) do
        if isValid(p) and p ~= _p then
            local obbhs = p:obbSize()
            
            local pos = (p:obbCenterW()):toScreen()
            
            local color = p:isPlayer() and p:inVehicle() and Color(255,100,100) or Color(255,255,100)
            
            --render.setFont(font)
            --render.setColor(team.getColor(p:getTeam()))
            render.setColor(color)
            --render.drawText(pos.x, pos.y, p:inVehicle() and p:getVehicle():getClass() or "", 1)
            
            render.drawRect(pos.x-BoxSize, pos.y-BoxSize, BoxSize*2, BoxSize*2)
        end
    end

end)


if player() == owner() then
    enableHud(nil, true)
end
    

