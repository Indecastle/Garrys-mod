--@name TargetEntity Server
--@author
--@shared

local O = owner()
local OO = player()

local MOUSE4_pressed = false

local target, targetP;

local oldIsPressed = nil


function func()
    local tr = O:getEyeTrace()          
    target = tr.Entity 
    --target:setUnbreakable(true)
    print(target)
    local props = find.inSphere(tr.HitPos, 1000, function(ent)
        return ent:getOwner() == O
    end)
    print(#props)
    for i, ent in ipairs(props) do
        printConsole(#ent:getAllConstrained())
        for i, constr in ipairs(ent:getAllConstrained({Parent= 1})) do
            --constr:remove()
        end
        constraint.breakAll(ent)
    end
    for i, ent in ipairs(props) do
        --pcall(function()
            --ent:setParent(target)
            --constraint.weld(ent, target)
        --end)
    end


    local tr2 = trace.trace(O:getShootPos(), O:getShootPos() + O:getEyeAngles():getForward()*100, {O}, MASK.ALL, nil, false)
    local dist = tr.HitPos:getDistance(O:getShootPos())
    local dist2 = tr2.HitPos:getDistance(O:getShootPos())
    
    local dist3 = 0
    local dir = O:getEyeAngles():getForward()
    local initPos = O:getShootPos()
    local startPos = initPos
    local endPos = dir*10000000
    
    for i=0, 5 do
        local tr3 = trace.trace(startPos, endPos, {O}, MASK.ALL, nil, false)
        if tr3.HitPos:isInWorld() then
            dist3 = tr3.HitPos:getDistance(initPos)
            break
        else
            startPos = tr3.HitPos + dir*1
        end
    end
    
    //print(dist)
    //print(dist2)
    
    //print(tr2.HitPos:isInWorld())

    
    //target.SetSpeed = 1
    //printTable(target:getNWVarTable())
    //target:use(nil, 1)
    
--[[
    for i=0, 31 do
        print(target:getDTInt(i))
    end
]]
--[[
    for k, v in pairs(tr) do
        print(""..k)
    end
]]
end



--[[
hook.add("inputPressed", "kk", function(button)
    if button == MOUSE.MOUSE4 then          
        func()
    end
end)
]]



    if SERVER then
        
        hook.add("ClientInitialized", "cl_init", function(ply)
        end)
        
        net.receive("keyHandler", function (len, ply)
            local key = net.readInt(8)
            if key == KEY.ALT then
                func(key)
            end
        end)
        
    else        
        
        hook.add("inputPressed", "", function(button)
            if player() != owner() then return end
            
            net.start("keyHandler")
            net.writeInt(button, 8)
            net.send()
        end)
        
    end





