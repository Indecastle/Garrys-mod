--@name Pod Controller hack 2
--@author Markiz
--@server


local IgnoreRadius = 200



local Chip = chip()

--Chip:setNoDraw(true)
--Chip:setSolid(false)

local Seat, Pod1, Pod2, ExitPointer


wire.adjustPorts(
    {
        Target="entity",
    },
    {
        LocalPos="vector",
        Angle="angle",
        Seat="entity",
    }
)


local li2 = find.inSphere(chip():getPos(), 30, function(ent)
    return ent:getClass() == 'prop_vehicle_prisoner_pod'
end)
if #li2 > 0 then
    Seat = find.closest(li2, chip():getPos())
else
    Seat = prop.createSeat(chip():localToWorld(Vector(0,-20,0)), chip():getAngles(), "models/nova/airboat_seat.mdl", true)
end

local li3 = find.inSphere(chip():getPos(), 30, function(ent)
    return ent:getClass() == 'gmod_wire_exit_point'
end)
if #li3 > 0 then
    ExitPointer = find.closest(li3, chip():getPos())
else
    ExitPointer = prop.createSent(chip():localToWorld(Vector(8,0,0)), chip():getAngles(), 'gmod_wire_exit_point', true, {
        Model = 'models/jaanus/wiretool/wiretool_range.mdl'
    })
end

local li4 = find.inSphere(chip():getPos(), 40, function(ent)
    return ent:getClass() == 'gmod_wire_pod'
end)
if #li4 > 1 then
    Pod1 = li4[1]
    Pod2 = li4[2]
else
    Pod1 = prop.createSent(chip():localToWorld(Vector(16,0,0)), chip():getAngles(), 'gmod_wire_pod', true, {
        Model = 'models/jaanus/wiretool/wiretool_range.mdl'
    })
    Pod2 = prop.createSent(chip():localToWorld(Vector(24,0,0)), chip():getAngles(), 'gmod_wire_pod', true, {
        Model = 'models/jaanus/wiretool/wiretool_range.mdl'
    })
end




wire.ports.LocalPos = Vector(0,0,0.01)
wire.ports.Seat = Seat

wire.create(ExitPointer, chip(), 'Local Position', 'LocalPos')
wire.create(ExitPointer, chip(), 'Entity', 'Seat')
wire.create(ExitPointer, chip(), 'Angle', 'Angle')
wire.create(Pod1, chip(), 'Vehicle', 'Seat')
wire.create(Pod2, chip(), 'Vehicle', 'Seat')
wire.create(Pod1, Pod1, 'Eject', 'Active')
wire.create(Pod2, Pod2, 'Eject', 'Active')
Seat:setNocollideAll(true)
Seat:setNoDraw(true)
Seat:setSolid(false)
ExitPointer:setNocollideAll(true)

local _isActivated = false


--timer.create("update_ang", 0.1, 0, function()
hook.add("tick", "update_ang", function()
    local target = isValid(wire.ports.Target) and wire.ports.Target or owner()
    wire.ports.Angle = target:getEyeAngles()
end)


hook.add("input", "triggerNewTarget", function(key, value)
    if key == "Target" then
        _isActivated = false
    end
end)


function isInIgnoredRadius(ply)
    local dist = chip():getPos():getDistance(ply:getPos())
    return dist < IgnoreRadius
end


hook.add("KeyPress", "test", function(ply, key)
    local dist = chip():getPos():getDistance(ply:getPos())
    if _isActivated or key != IN_KEY.USE or ply:inVehicle() or isInIgnoredRadius(ply) then return end
    if ply != wire.ports.Target then return end
    
    local dir = ply:getEyeAngles():getForward()
    
    Seat:setSolid(true)
    Seat:setPos(ply:getEyePos() + dir*20)
    timer.create("reset", 0.1, 1, function()
        Seat:setPos(chip():localToWorld(Vector(0,-20,0)))
        Seat:setSolid(false)
    end)
end)


hook.add("DupeFinished", "abc", function()
    --chip():remove()
end)


hook.add("think", "", function()
end)


hook.add("PlayerEnteredVehicle", "hack123", function(ply, vehicle, num)
    if _isActivated or ply != wire.ports.Target or vehicle != Seat or isInIgnoredRadius(ply) then return end
    onActivateHandler(ply)
end)

function onActivateHandler(ply)
    _isActivated = true
    print(Color(100,255,200), 'Player', Color(200,0,200), ' [', Color(200,100,0), ply:getName(), Color(200,0,200), '] ', Color(100,255,200), 'sat down in the chair')
    chip():emitSound("NPC_FloorTurret.AlarmPing", 1, 1, 1, 1)
end