--@name Image Display Projected
--@author Markiz
--@model models/lamps/torch.mdl
--@shared

local URLS = {
    rikka_1 = "https://i.imgur.com/xdOEuic.png",
    rikka_2 = "https://i.imgur.com/qSiOCZH.jpg",
    rikka_ch = "https://i.imgur.com/9UtATPQ.gif",
    rikka_s = "https://cdn.discordapp.com/attachments/510528712320483329/711301069413679154/received_1790417730979994.jpeg",
    rikka_c = "https://i.imgur.com/5139yCi.jpg",
    rikka_f = "https://anime-planet.com/images/characters/rikka-takanashi-43640.jpg",
    horny = "https://media.discordapp.net/attachments/542043404629180417/849195384470503444/paLNxVWlfEM.png",
    malina_booba = "https://media.discordapp.net/attachments/854459216839049267/854459668261109790/O2NFX9U5dT8.jpg",
    malina_r = "https://media.discordapp.net/attachments/854459216839049267/854459668696793148/Prinz_Eugen.png",
    flag_russia = "https://i.imgur.com/jR2vDAC.png",
    
    obunga = "https://i.imgur.com/wEBb6mG.png",
    sidorovich = "https://i.imgur.com/rHE1lsn.png",
    sidorovich_brightness_less = "https://i.imgur.com/RjeaHYn.png",
    sidorovich_brightness_less2 = "https://i.imgur.com/EIEuHDO.png",
    sidorovich_brightness_less3 = "https://i.imgur.com/e2mWcg5.png",
    sidorovich_brightness_less4 = "https://i.imgur.com/PXRDwZO.png",
    nigga = "https://i.imgur.com/VOtL40V.jpeg",
    flag_poland = "https://i.imgur.com/2l0Eq5L.png",
    
    kitten = "https://i.imgur.com/qlhVKyZ.png",
    soldierMeme = "https://i.imgur.com/etDODQs.jpg",
    barryWood = "https://i.imgur.com/PQiuccK.png",
    obobrali_do_gola = "https://i.imgur.com/YeA7JbG.png",
    putin = "https://i.imgur.com/ngN7RZF.jpg",
    
    custom = nil
}

local img = "soldierMeme"

local maxh = 100


if SERVER then
    return
end


local FPS = 5
local frame = 0
local delta = 1/FPS


render.createRenderTarget("cantload")

local nonmat = material.create("UnlitGeneric")
nonmat:setTextureRenderTarget("$basetexture", "cantload")
nonmat:setInt("$flags", 0)

local texture = nonmat:getTexture("$basetexture")


function cloneMaterial(shader, path)
    local mat0 = material.load(path)
    local mat = material.create(shader)
    
    local blockedVars = {
        '$frame',
        '$frame2',
        '$flags2',
    }
    
    local texturedVars = {
        '$basetexture',
        '$dudvmap',
        '$normalmap',
        '$refracttinttexture',
        '$flashlighttexture',
    }
    
    for i, k in ipairs(texturedVars) do
        mat:setUndefined(k)
    end
    
    if owner() == player() then
        --log(mat0:getKeyValues())
    end
    
    for k, v in pairs(mat0:getKeyValues()) do
        if table.hasValue(blockedVars, k) then
            continue
        end
        if owner() == player() then
            --log('' .. k .. ' - ' .. type(v))
        end

        --print(k, ' - ', v)
        if type(v) == 'number' then
            local ss = pcall(function()
                mat:setFloat(k, v)
            end)
            if not ss then
                mat:setInt(k, v)
            end
        elseif type(v) == 'Vector' then
            mat:setVector(k, v)
        elseif type(v) == 'VMatrix' then
            mat:setMatrix(k, v)
        elseif table.hasValue(texturedVars, k) then
            mat:setTexture(k, v)
        else
            mat:setString(k, v)
        end
    end
    mat:recompute()
    
    return mat
end


function loadImage()
    if img == nil then return end
    if URLS[img] == nil then return end
    
    URL = URLS[img]

    if not hasPermission("material.urlcreate", URL) then
        return
    end

    --local mat = material.create("UnlitGeneric")
    local mat = cloneMaterial("UnlitGeneric", "effects/flashlight/logo")
    --mat:setString("$basetexturetransform", "center 0.5 0.5 scale 1 1 rotate 0 translate 0 0")
    mat:setInt("$nodecal", 1)
    mat:setInt("$clampu", 1)
    mat:setInt("$clampv", 1)
    mat:setInt("$translucent", 1)
    mat:setInt("$ignorez", 1)
    mat:setInt("$nocull", 1)
    mat:recompute()
    
    
    --mat:setInt("$flags", 256)
    
    mat:setTextureURL("$basetexture", URL, function(m, u, w, h, l)
        if m == nil then return end
    
        local ratio = w / h

        local sh = maxh
        local sw = sh * ratio
        --screen:setSize(Vector(sh, sw, 1))
        
        local x,y,w,h;
        if PosUp then x=m:getWidth()/4 y=0 w=m:getWidth()/2 h=m:getHeight()/2
        else x=0 y=0 w=m:getWidth() h=m:getHeight() end
    
        l(x, y, w, h)
        
        --screen:setMaterial("!" .. mat:getName())
    end)
    
    texture = mat:getTexture("$basetexture")
end


loadImage()

if not hasPermission("material.urlcreate", URL) then
    setupPermissionRequest({"material.urlcreate"}, "Load images from external websites", true)
    
    hook.add("permissionrequest", "perm", loadImage)
    
    hook.add("renderoffscreen", "cantload", function()
        local now = timer.systime()
        if frame > now then return end
        frame = now + delta
        
        render.selectRenderTarget("cantload")
        render.clear()
        
        local font = render.createFont("Arial", 50, 400, true, false, false, false, false, true)
        render.setFont(font)
        
        render.drawText(512, 270, "Image source is not whitelisted!", 1)
        render.drawText(512, 330, "Press E on the dot to allow loading!", 1)
        
        render.draw3DSphere(Vector(w, h, 20), 30, 20, 20)
        
        // render.drawCircle(512, 512, 10)
    end)
end


local flashlight = light.createProjected()

hook.add("Think", "UpdateFlashlight", function()
    flashlight:setTexture(texture)
    flashlight:setBrightness(5)
    flashlight:setFarZ(9000)
    flashlight:setFOV(90)
    flashlight:setColor(Color(255, 255, 255))
    --flashlight:setEnableShadows(true)

    flashlight:setPos(chip():localToWorld(Vector(6,0,0)))
    flashlight:setAngles(chip():localToWorldAngles(Angle(0,0,0)))

    flashlight:update()
end)
