--@name WH stencil simple

--@shared

local OnlyOwner = false


O = owner()
OO = player()
local isOwner = O == OO

if SERVER then
    local conectingPlayers = {}
    
    net.receive("hud_connecting", function (len, ply)
        local isCon = net.readBool()
        if isCon then
            table.insert(conectingPlayers, ply)
        else
            table.removeByValue(conectingPlayers, ply)
        end
    end)
    
    timer.create("check_players", 2, 0, function()
        for i, v in ipairs(conectingPlayers) do
            if not v:isValid() then
                table.removeByValue(conectingPlayers, v)
            end
        end
        table.removeByValue(conectingPlayers, O)
        
        net.start("conecting_players")
        net.writeTable(conectingPlayers)
        net.send(owner())
    end)
    
    return
end



setName("Generic")
local conectingPlayers = {}

local O = player()
local MaxDistance = 10000

local font = render.createFont("Arial" // font
                                ,19 // size
                                ,2000 // weight
                                ,false // antialias
                                ,false // additive
                                ,true // shadow
                                ,true // outline
                                ,false // blur
                                ,false //extended
                                )

local oldIsPressed_PAD_MULTIPLY = false
local ON = 1

local PlayerHolos = {}

local function resetStencil()
    render.setStencilWriteMask(0xFF)
    render.setStencilTestMask(0xFF)
    render.setStencilReferenceValue(0)
    render.setStencilCompareFunction(STENCIL.ALWAYS)
    render.setStencilPassOperation(STENCIL.KEEP)
    render.setStencilFailOperation(STENCIL.KEEP)
    render.setStencilZFailOperation(STENCIL.KEEP)
    render.clearStencil()
end
local function drawEnts()
    for _, d in ipairs(PlayerHolos) do
        d.h:draw()
    end
end
local function stencilWallhack()
    resetStencil()
    render.setStencilEnable(true)
    render.setStencilReferenceValue(1)
    render.setStencilCompareFunction(STENCIL.ALWAYS)
    render.setStencilZFailOperation(STENCIL.REPLACE)
    drawEnts()
    render.setStencilCompareFunction(STENCIL.EQUAL)
    render.clearBuffersObeyStencil(128, 0, 255, 255, false)
end


function parentHolos()
    for i, p in ipairs(find.allPlayers()) do
        local h = holograms.create(chip():getPos(), Angle(), p:getModel(), Vector(1,1,1))
        h:setNoDraw(true)
        h:setParent( p )
        h:addEffects( 1 )
        table.insert(PlayerHolos, {p=p, h=h})
    end
end
parentHolos()


function drawConectingPlayers()
    render.setFont("DermaLarge")
    render.setColor(Color())
    render.drawText(10, 10, "WH players:")
    
    for i=1, #conectingPlayers do
        if conectingPlayers[i]:isValid() then
            render.setColor(team.getColor(conectingPlayers[i]:getTeam()))
            render.drawText(10, 40 + 30*(i-1), conectingPlayers[i]:getName())
        end
    end
end


hook.add("PostDrawOpaqueRenderables", "DrawProps", stencilWallhack)


hook.add("drawHUD","myshook",function()
    if ON != 0 then
        for i, d in ipairs(PlayerHolos) do
            p = d.p
            h = d.h
            if p ~= player() then
                //if p:getPos():getDistance( owner():getPos() ) > 1300 then continue end
                local obbw = p:obbCenterW()
                local obbhs = p:obbSize()
                
                local pos = (p:getPos() + Vector(0, 0, obbhs.z+10)):toScreen()
                

                render.setFont(font)
                render.setColor(team.getColor(p:getTeam()))
                render.drawText(pos.x, pos.y-10, p:getName(), 1)
            end
        end
    end
    
    if ON == 2 and (isOwner or !OnlyOwner) then
        drawConectingPlayers()
    end
end)



function hudConnecting(isCon)
    ON = isCon and 1 or 0
    net.start("hud_connecting")
    net.writeBool(isCon)
    net.send()
end

hook.add("hudconnected", "", function ()
    hudConnecting(true)
end)
hook.add("huddisconnected", "", function ()
    hudConnecting(false)
end)
net.receive("conecting_players", function (len)
    conectingPlayers = net.readTable()
end)

if render.isHUDActive() then
    hudConnecting(true)
end


hook.add("inputPressed", "", function(button)
    if button == KEY.PAD_DIVIDE then 
        if !OnlyOwner or isOwner then         
            ON = (ON + 1) % 3
        else
            ON = (ON + 1) % 2
        end
    end
end)
    