--@name AABB alphanum size baker
--@author Derpius
--@client

if player() ~= owner() then return end

local charMapper = {
    a = "l_a",
    b = "l_b",
    c = "l_c",
    d = "l_d",
    e = "l_e",
    f = "l_f",
    g = "l_g",
    h = "l_h",
    i = "l_i",
    j = "l_j",
    k = "l_k",
    l = "l_l",
    m = "l_m",
    n = "l_n",
    o = "l_o",
    p = "l_p",
    q = "l_q",
    r = "l_r",
    s = "l_s",
    t = "l_t",
    u = "l_u",
    v = "l_v",
    w = "l_w",
    x = "l_x",
    y = "l_y",
    z = "l_z",
    A = "a",
    B = "b",
    C = "c",
    D = "d",
    E = "e",
    F = "f",
    G = "g",
    H = "h",
    I = "i",
    J = "j",
    K = "k",
    L = "l",
    M = "m",
    N = "n",
    O = "o",
    P = "p",
    Q = "q",
    R = "r",
    S = "s",
    T = "t",
    U = "u",
    V = "v",
    W = "w",
    X = "x",
    Y = "y",
    Z = "z",
    ["0"] = "0",
    ["1"] = "1",
    ["2"] = "2",
    ["3"] = "3",
    ["4"] = "4",
    ["5"] = "5",
    ["6"] = "6",
    ["7"] = "7",
    ["8"] = "8",
    ["9"] = "9",
    ["."] = "prd",
    [","] = "com",
    [":"] = "colon",
    [";"] = "scolon",
    ["?"] = "qmark",
    ["!"] = "xmark",
    ['"'] = "quote",
    ["~"] = "tilde",
    ["<"] = "lessthan",
    [">"] = "greaterthan",
    ["_"] = "underscore",
    ["@"] = "atsign",
    ["#"] = "pdsign",
    ["$"] = "dlsign",
    ["%"] = "pcnt",
    ["^"] = "crt",
    ["&"] = "and",
    ["'"] = "apost",
    ["("] = "lpar",
    [")"] = "rpar",
    ["["] = "lbracket",
    ["]"] = "rbracket",
    ["{"] = "lcbracket",
    ["}"] = "rcbracket",
    ["|"] = "bar",
    ["+"] = "plu",
    ["-"] = "min",
    ["*"] = "ast",
    ["/"] = "div",
    ["="] = "equal",
}

function calcAABBSize(meshes)
    local min, max = 0, 0
    
    for i = 1, #meshes do
        for j = 1, #meshes[i].verticies do
            local vert = meshes[i].verticies[j].pos
            
            if vert[1] < min then min = vert[1] end
            if vert[1] > max then max = vert[1] end
        end
    end
    
    return max - min, min
end

print("{")
for k, v in pairs(charMapper) do
    local width, min = calcAABBSize(mesh.getModelMeshes("models/sprops/misc/alphanum/alphanum_"..v..".mdl"))

    print("    [\""..k.."\"] = {"..tostring(width)..", "..tostring(min).."},")
end
print("}")