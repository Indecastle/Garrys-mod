--@name Image on screen
--@author AKCEJIb
--@shared
--@include ./libs/util.txt

--[[
    
    Image on screen by AKCEJIb
    Version: 1.0
    Date: 15.07.2019
  
    Permissions:
    - Disable url material whitelist:
    sf_permission_cl material.urlcreate urlwhitelist 2
    
    Type this commands to console. Give this commands to friends.
    
    Usage:
    1. Place this chip on ground.
    2. Place 'Starfall - Component' on ground.
    3. RMB to 'Starfall - Component'.
    4. RMB to chip on ground from step 1.
    5. Type in chat !{image_link}, without {}
    
]]--

if CLIENT then
    
    local maxh = 120

    local image;
    
    function SetImage(stringURL)
        //local url = ConvertFromBBCode(stringURL)
        
        image = material.create("UnlitGeneric")
        image:setInt("$flags", 256)
        --image:setTextureURL("$basetexture",stringURL)
        image:setTextureURL("$basetexture", stringURL, function(m, u, w, h, l)
            if m == nil then return end
        
            local ratio = w / h

            local sh = 10
            local sw = sh * ratio
            
            --l(0, 0, m:getWidth(), m:getHeight())
            
            hook.add("renderoffscreen","",function()
                render.selectRenderTarget("imageFeild")
                render.setColor(Vector(0,0,0))
                render.setMaterial(image)
                render.drawTexturedRect(0, 0, 1024, 1024)
        
                hook.remove("renderoffscreen", "")
            end)
        end)
        print(stringURL)
    end
    
    render.createRenderTarget("imageFeild")
    
    net.receive("imgUpdate", function()
        local url = net.readString()
        SetImage(url)
    end)
    
    /*hook.add("renderoffscreen","",function()
        render.selectRenderTarget("imageFeild")
        render.setColor(Vector(0,0,0))
        render.setMaterial(image)
        render.drawTexturedRect(0, 0, 1024, 1024)

        hook.remove("renderoffscreen", "")
    end)*/
    
    hook.add("render", "dd", function()
        render.selectRenderTarget()
        render.setColor(Vector(0,0,0))
        render.setRenderTargetTexture("imageFeild")
        render.drawTexturedRect(0,0, 512, 512)
        
    end)
    
else
--[[
    OLD ImageParse
    Deprecated because we have image links without extension :\
    ------------
    
    local Utils = require("libs/util.txt")
    local Set = Utils.Set -- Load Set function from library
    
    -- Allowed types
    local imgTypes = Set {
        ".png",
        ".jpg",
        ".gif", -- Without animation :(
        ".jpeg"
    }
    
    local pattern = "^!https?:.*%..*$"
    
    
    hook.add("PlayerSay", "say", function(ply, text)
        
        local _tt = string.match(text, pattern)
        
        if _tt then
        
            local _tend = string.match(_tt, "%.%a*$")
            
            if imgTypes[_tend] then
    
                net.start("imgUpdate")
                    net.writeString(_tt:sub(2))
                net.send()
                
            else
                
                print("Invalid image URL!")
                    
            end
            
        end
        
    end)
]]--

    local pattern = "^!https?://.*$"
    
    
    /*hook.add("PlayerSay", "say", function(ply, text)
        
        local _tt = string.match(text, pattern)
        
        if _tt then

            net.start("imgUpdate")
                net.writeString(_tt:sub(2))
            net.send()
         
        end
        
    end)*/
    
    hook.add("ClientInitialized", "", function()
    
        net.start("imgUpdate")
            net.writeString("https://i.imgur.com/9UtATPQ.gif")
        net.send()
        
        hook.remove("ClientInitialized", "")
    end)
end