--@name Toilet 2
--@author
--@server

local ToiletModel = 1
local AutoFlushDown = true

local AdditionalLocalPos = Vector(0,0,0)
local AdditionalLocalAngle = Angle(0,0,0)

local IsWomanSounds = true


chip():setColor(Color(0,0,0,0))
chip():setNocollideAll(true)



local Toilet_datas = {
    [1] = {
        Model = 'models/props_wasteland/prison_toilet01.mdl',
        ToiletLocalPos = Vector(0,0,15),
        WaterLocalPos = Vector(2.8,0,-4),
        WaterScale = Vector(0.17, 0.12, 0.01)*0.9,
        SeatLocalPos = Vector(0,0,-5),
        EjectLocalPos = Vector(0,40,-15),
        EjectLocalAngle = Angle(45,-90,0),
    },
    [2] = {
        Model = 'models/props_c17/furnituretoilet001a.mdl',
        ToiletLocalPos = Vector(0,0,47),
        WaterLocalPos = Vector(2.5,0,-32),
        WaterScale = Vector(0.17, 0.12, 0.01)*1.1,
        SeatLocalPos = Vector(0,0,-32),
        EjectLocalPos = Vector(0,40,-20),
        EjectLocalAngle = Angle(45,-90,0),
    },
    [3] = {
        Model = 'models/env/furniture/ensuite1_toilet/ensuite1_toilet.mdl',
        ToiletLocalPos = Vector(0,0,0),
        WaterLocalPos = Vector(20,0,15),
        WaterScale = Vector(0.17, 0.12, 0.01)*1.3,
        SeatLocalPos = Vector(17,0,15),
        EjectLocalPos = Vector(0,40,-20),
        EjectLocalAngle = Angle(45,-90,0),
    },
    [4] = {
        Model = 'models/env/furniture/ensuite1_toilet/ensuite1_toilet_b.mdl',
        ToiletLocalPos = Vector(0,0,0),
        WaterLocalPos = Vector(15,0,15),
        WaterScale = Vector(0.17, 0.12, 0.01)*1.3,
        SeatLocalPos = Vector(12,0,15),
        EjectLocalPos = Vector(0,40,-20),
        EjectLocalAngle = Angle(45,-90,0),
    },
    [5] = {
        Model = 'models/props_interiors/toilet_b.mdl',
        ToiletLocalPos = Vector(0,0,0),
        WaterLocalPos = Vector(27.5,0,13),
        WaterScale = Vector(0.165, 0.135, 0.01)*1.4,
        SeatLocalPos = Vector(25,0,13),
        EjectLocalPos = Vector(0,40,-18),
        EjectLocalAngle = Angle(45,-90,0),
    },
}

local data = Toilet_datas[ToiletModel]

local Toilet, Holo_Water, Holo_Water2, Shits, Seat, ExitPointer
local _isToiletMine = false
local _shitIndex = 0

wire.adjustPorts(
    {
        A="number",
    },
    {
        LocalPos="vector",
        Angle="angle",
        Seat="entity",
    }
)
            
function playSound()
    Seat:emitSound("ambient/machines/usetoilet_flush1.wav")
end

function playKekSound()
    local path = ''
    
    if IsWomanSounds then
        path = 'vo/npc/female01/pain'..string.format('%02d', math.round(math.rand(1,9)))..'.wav'
    else
        path = 'vo/npc/male01/pain'..string.format('%02d', math.round(math.rand(1,9)))..'.wav'
    end
    
    Seat:emitSound(path)
end


--prop.createSent(self:GetPos(), self:GetAng(), self.Class, true, {
--    model = self.Model,
--})
--local Holo_Toilet = holograms.create(chip():localToWorld(Vector(0,0,14)), chip():localToWorldAngles(Angle(0,90,0)), "models/props_wasteland/prison_toilet01.mdl", Vector(1))

local li = find.inSphere(chip():getPos(), 20, function(ent)
    return ent:getModel() == data.Model
end)
if #li > 0 then
    Toilet = find.closest(li, chip():getPos())
else
    Toilet = prop.create(chip():localToWorld(data.ToiletLocalPos), chip():getAngles(), data.Model, true)
end

_isToiletMine = Toilet:getOwner() == owner()


Holo_Water = holograms.create(Toilet:localToWorld(data.WaterLocalPos), Toilet:localToWorldAngles(Angle(0,0,0)), "models/props_phx/construct/metal_angle360.mdl", data.WaterScale)
Holo_Water2 = holograms.create(Toilet:localToWorld(data.WaterLocalPos - Vector(0,0,0.01)), Toilet:localToWorldAngles(Angle(0,0,0)), "models/props_phx/construct/metal_angle360.mdl", data.WaterScale)
--Holo_Water = holograms.create(chip():localToWorld(Vector(0,2.5,8)), chip():getAngles() + Angle(0,90,0), "models/props_phx/construct/metal_angle360.mdl", Vector(0.17, 0.105, 0.01))

li = find.inSphere(chip():getPos(), 20, function(ent)
    return ent:getModel() == "models/nova/airboat_seat.mdl"
end)
if #li > 0 then
    Seat = find.closest(li, chip():getPos())
    Seat:setPos(Toilet:localToWorld(data.SeatLocalPos))
    Seat:setAngles(Toilet:localToWorldAngles(Angle(0,-90,0)))
    Seat:setFrozen(true)
else
    Seat = prop.createSeat(Toilet:localToWorld(data.SeatLocalPos), Toilet:localToWorldAngles(Angle(0,-90,0)), "models/nova/airboat_seat.mdl", true)
end

li = find.inSphere(chip():getPos(), 20, function(ent)
    return ent:getClass() == 'gmod_wire_exit_point'
end)
if #li > 0 then
    ExitPointer = find.closest(li, chip():getPos())
else
    ExitPointer = prop.createSent(chip():localToWorld(Vector(5,0,0)), chip():getAngles(), 'gmod_wire_exit_point', true, {
        Model = 'models/jaanus/wiretool/wiretool_range.mdl'
    })
end

wire.ports.LocalPos = data.EjectLocalPos + AdditionalLocalPos
wire.ports.Seat = Seat
wire.create(ExitPointer, chip(), 'Local Position', 'LocalPos')
wire.create(ExitPointer, chip(), 'Angle', 'Angle')
wire.create(ExitPointer, chip(), 'Entity', 'Seat')

timer.create("Update Angle", 0.1, 0, function()
    wire.ports.Angle = Seat:localToWorldAngles(data.EjectLocalAngle + AdditionalLocalAngle)
end)


local Shits = {
    holograms.create(Toilet:localToWorld(data.WaterLocalPos - Vector(0,0,0.7)), Toilet:localToWorldAngles(Angle(90,0,45)), "models/Gibs/HGIBS_spine.mdl", Vector(0.5)),
    holograms.create(Toilet:localToWorld(data.WaterLocalPos - Vector(-2,-2,0.3)), Toilet:localToWorldAngles(Angle(0,120,-95)), "models/Gibs/HGIBS_spine.mdl", Vector(0.5)),
    holograms.create(Toilet:localToWorld(data.WaterLocalPos - Vector(-2,2,0.2)), Toilet:localToWorldAngles(Angle(90,90,-90)), "models/Gibs/HGIBS_spine.mdl", Vector(0.5)),
}

for i, holo in ipairs(Shits) do
    holo:setMaterial("models/debug/debugwhite")
    holo:setColor(Color(100,50,0))
    holo:setParent(Seat)
    holo:setNoDraw(true)
end

Holo_Water:setMaterial("models/shadertest/predator")
Holo_Water2:setMaterial("models/debug/debugwhite")
Holo_Water2:setColor(Color(0,161,255,100))
Holo_Water:setParent(Seat)
Holo_Water2:setParent(Seat)

if _isToiletMine then
    Seat:setParent(Toilet)
else
    hook.add('think', '', function()
        Seat:setPos(Toilet:localToWorld(data.SeatLocalPos))
        Seat:setAngles(Toilet:localToWorldAngles(Angle(0,-90,0)))
        Seat:setFrozen(true)
    end)
end

Seat:setColor(Color(0,0,0,0))
Seat:setNoDraw(true)
Seat:setNocollideAll(true)

--ExitPointer:setNoDraw(true)
--ExitPointer:setParent(Seat)
ExitPointer:setColor(Color(0,0,0,0))
ExitPointer:setNocollideAll(true)

function FlushDown()
    timer.remove('hide_kek')
    
    timer.create('hide_kek', 4, 1, function()
        _shitIndex = 0
        for i, holo in ipairs(Shits) do
            holo:setNoDraw(true)
        end
    end)
    
    playSound()
end


hook.add("PlayerEnteredVehicle", "Toilet", function(ply, vehicle)
    if vehicle == Seat then
        timer.remove('hide_kek')
        
        timer.create('kek', 2, 3, function()
            _shitIndex = (_shitIndex + 1 < #Shits) and (_shitIndex + 1) or #Shits
            Shits[_shitIndex]:setNoDraw(false)
            playKekSound()
        end)
    end
end)


hook.add("PlayerLeaveVehicle", "Toilet", function(ply, vehicle)
    if vehicle == Seat then
        timer.remove('kek')
        if AutoFlushDown then
            FlushDown()
        end
    end
end)



hook.add("input", "toilet", function(key, value)
    if key == 'A' and value == 1 then
        FlushDown()
    end
end)