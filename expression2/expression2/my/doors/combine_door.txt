@name Combine Door
@inputs Fade [Shield D1 D2]:entity
@outputs
@persist [Material Sound]:string Holo:entity
@trigger Fade Shield

if(first() | duped() | dupefinished()) {
    #ifdef runOnLast(number)
        runOnLast(1)
    #endif
    Sound = "ambient/machines/combine_shield_touch_loop1.wav"
    Material = "effects/combineshield/comshieldwall2"
    
    function coll (State) {
        #ifdef entity:propNotSolid(number)
            Shield:propNotSolid(State)
        #else
            #ifdef entity:noCollideAll(number)
                Shield:noCollideAll(State)
            #endif
            
        #endif
    }
    function set_skin (State) {
        D1:setSkin(State) D2:setSkin(State)
    }
    
    function initShield () {
        Holo = holoCreate(1, vec())
        holoMaterial(1, Material)
        holoModel(1, Shield:model())
        Shield:setAlpha(0)
        
        Holo:setPos(Shield:pos())
        Holo:setAng(Shield:angles())
        Holo:parentTo(Shield)
    }
    
    Shield:setMaterial(Material)
    initShield()
}

if (~Shield & Shield) {
    initShield()
}

if (~Fade) {
    if(Fade) {
        soundStop("Shield")
        Holo:setAlpha(0)
        set_skin(1)
        coll(1)
    }
    else {
        Holo:soundPlay("Shield",100000,Sound) soundVolume("Shield",0.05)
        Holo:setAlpha(255)
        set_skin(0)
        coll(0)
    }
}


#ifdef last()
if(last()) {
    soundStop("Shield")
    Shield:setAlpha(255)
    coll(0)
}
#endif
