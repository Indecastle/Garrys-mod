@name Teleport (Half-Life 2)
@inputs R1 R2 R3 R4   Z1 Z2 Z3   Button ButtonLock OnLockIn  Driver:entity TP_ARRAY:array
@outputs Turn Lock OnLockOut Eject DoorOn  [ExitPointLocal RGB]:vector Angle_Local:angle
@persist [Veh A A1 B1 A11 A12 A13 ABlock A21 A22 A23 A24 A30]:entity #[R T]# Z Locker VehNoTP
@trigger Button ButtonLock Driver OnLockIn TP_ARRAY

#[
function void array:noCollideEnt() {
    for(I=1, This:count()-1) {
        for(J=I+1, This:count()) {
            noCollide(This[I,entity], This[J,entity])
        }
    }
}
]#

if(first() | dupefinished()) {
    #[
    findByModel("models/props_lab/teleportframe.mdl")
    A = findClosest(entity():pos())
    findByModel("models/props_lab/teleplatform.mdl")
    findSortByDistance(entity():pos())
    A1 = findResult(1)
    B1 = findResult(2)
    findByModel("models/props_lab/teleportgate.mdl")
    findSortByDistance(entity():pos())
    A11 = findResult(1)
    A12 = findResult(2)
    A13 = findResult(3)
    findByClass("prop_vehicle_prisoner_pod")
    Veh = findClosest(entity():pos())
    ]#
    
    
    A21 = holoCreate(1, A1:toWorld(vec(0,0,40)), vec(1), ang(0,180,0), vec4(255), "models/props_lab/teleportring.mdl")
    A22 = holoCreate(2, A1:toWorld(vec(0,0,50)), vec(1), ang(0,180,0), vec4(255), "models/props_lab/teleportring.mdl")
    A23 = holoCreate(3, A1:toWorld(vec(0,0,60)), vec(1), ang(0,180,0), vec4(255), "models/props_lab/teleportring.mdl")
    A24 = holoCreate(4, A1:toWorld(vec(0,0,40)), vec(1), ang(0,180,0), vec4(255), "models/props_lab/teleportring.mdl")
    A30 = holoCreate(5, A1:toWorld(vec(0,0,40)), vec(1), ang(0,180,0), vec4(255), "models/props_phx/wheelaxis.mdl")
    
    
    Lock = 1
    Locker = 0
    
    Z = 10
    timer("Turn", 0)
    #array(A,A1,A11,A12,A13):noCollideEnt()
    
    ExitPointLocal = vec(0,0,5)
    RGB = vec(0,255,0)
    #timer("fast", 10)
    
    #Enabled = 1
    timer("set Array", 100)
    Angle_Local = ang(0,90,0)
}

if((~TP_ARRAY | clk("set Array"))) {
    if(TP_ARRAY:exists(1)) {
        A = TP_ARRAY:entity(1)
        A1 = TP_ARRAY:entity(2)
        A11 = TP_ARRAY:entity(3)
        A12 = TP_ARRAY:entity(4)
        A13 = TP_ARRAY:entity(5)
        Veh = TP_ARRAY:entity(6)
        B1 = TP_ARRAY:entity(7)
        ABlock = TP_ARRAY:entity(8)
    }
    else {
        A = A1 = A11 = A12 = A13 = Veh = B1 = ABlock = noentity()
    }
}

if(~Button & Button & !Locker) {
    RGB = vec(255,255,0)
    Locker = 1
    Lock = 0
    DoorOn = 1
    timer("check driver", 5000)
}

if(~ButtonLock & ButtonLock & !Locker) {
    RGB = vec(0,0,255)
    Locker = 1
    timer("check driver", 5000)
}

if(~Driver & Driver:isPlayer() & !OnLockOut) {
    RGB = vec(255,0,0)
    OnLockOut = 1
    DoorOn = 0
    
    stopAllTimers()
    timer("up", 10)
    timer("Turn", 10)
    
}

if(~OnLockIn & OnLockIn & Locker) {
    RGB = vec(255,0,0)
    Z = 10
    stopAllTimers()
    timer("Turn", 10)
    timer("up", 10)
}

if(clk("check driver")) {
    Lock = 1
    DoorOn = 0
    timer("OnLockOut and Locker", 1500)
    
}

#sounds
#"k_lab.teleport_active"
#"k_lab.teleport_sound"
#"ambient/machines/usetoilet_flush1.wav" toilet :)))))

if(clk("up") & Z < 100) {
    if(Z==10) {
        A1:soundPlay(3, 3.5, "doors/drawbridge_move1.wav")
    }
    timer("up", 100)
    Z = Z + 3
    if(Z >= 100) {
        Z = 100
        stoptimer("up")
        timer("TP_ON", 1000)
        VehNoTP = 1
        Lock = 1
    }
}

if(clk("TP_ON")) {
    A:soundPlay(1, 9, "k_lab.teleport_active")
    Turn = 1
    timer("down", 11000)
    timer("to B", 8000)
    timer("SOUND TP", 4000)
}

if(clk("down") & Z > 10) {
    if(Z == 100) { 
        A1:soundPlay(1, 3.5, "doors/drawbridge_move1.wav")
        VehNoTP = 0
    }
    timer("down", 100)
    Z = Z - 3
    if(Z <= 10) {
        Z = 10
        stoptimer("down")
        Eject = 0
        if(OnLockIn) {
            DoorOn = 1
            timer("door off", 5000)
            RGB = vec(255,255,0)
        }
        else { 
            RGB = vec(0,255,255)
        }
        timer("OnLockOut and Locker", 6500)
    }
}

if(clk("SOUND TP")) { A1:soundPlay(20, 4.366, "hl1/ambience/particle_suck2.wav") }
if(clk("to B"))  {
    Turn = 0
    if(OnLockOut) {
        Veh:setPos(B1:toWorld(vec(0,0,5)))
    }
    timer("eject", 100)
    timer("SOUND2", 200)
    A1:soundPlay(4, 3.08, "hl1/ambience/port_suckin1.wav")
}

if(clk("eject")) {
    Eject = 1
}

if(clk("OnLockOut and Locker")) { 
    OnLockOut = 0
    Locker = 0
    RGB = vec(0,255,0)
}
if(clk("door off")) { DoorOn = 0 }


if(clk("SOUND2")) {
    A:soundPlay(2, 4, "k_lab.teleport_sound")
    A1:soundPlay(3, 8.73, "ambient/levels/labs/teleport_postblast_thunder1.wav")
    A1:soundPlay(4, 3.08, "hl1/ambience/port_suckin1.wav")
    soundVolume(3, 0.8)
    #Eject = 1
    #ExitPoint = A:toWorld(vec(31,0,100))
}

if(clk("Turn")) {
    timer("Turn",100)
    
    
    
    A1:setPos(A:toWorld(vec(31,0,Z))) A1:setAng(A:toWorld(ang(0)))
    ABlock:setPos(A:toWorld(vec(87,0,100))) ABlock:setAng(A:toWorld(ang(0,135,0)))
    A11:setPos(A:toWorld(vec(84,0,Z1))) A11:setAng(A:toWorld(ang(0)))
    A12:setPos(A:toWorld(vec(84,0,Z2))) A12:setAng(A:toWorld(ang(0)))
    A13:setPos(A:toWorld(vec(84,0,Z3))) A13:setAng(A:toWorld(ang(0)))
    
    #R = (R+T)%360
    
    
    #A21:setPos(A1:toWorld(vec(10,0,20)))  A21:setAng(A1:toWorld(ang(0,R1+180,0)))
    #A22:setPos(A1:toWorld(vec(10,0,30)))  A22:setAng(A1:toWorld(ang(0,R2+180,0)))
    #A23:setPos(A1:toWorld(vec(10,0,40)))  A23:setAng(A1:toWorld(ang(0,R3+180,0)))
    #A24:setPos(A1:toWorld(vec(10,0,50)))  A24:setAng(A1:toWorld(ang(0,R4+180,0)))
    #A30:setPos(A1:toWorld(vec(10,0,1)))  A30:setAng(A1:toWorld(ang(0)))
    
    holoPos(1, A1:toWorld(vec(10,0,20))) holoAng(1, A1:toWorld(ang(0,R1+180,0)))
    holoPos(2, A1:toWorld(vec(10,0,30))) holoAng(2, A1:toWorld(ang(0,R2+180,0)))
    holoPos(3, A1:toWorld(vec(10,0,40))) holoAng(3, A1:toWorld(ang(0,R3+180,0)))
    holoPos(4, A1:toWorld(vec(10,0,50))) holoAng(4, A1:toWorld(ang(0,R4+180,0)))
    holoPos(5, A1:toWorld(vec(10,0,1))) holoAng(5, A1:toWorld(ang(0)))
    if(!VehNoTP) { Veh:setPos(A1:toWorld(vec(6,0,-3)))  Veh:setAng(A1:toWorld(ang(0,-90,0))) }
}
