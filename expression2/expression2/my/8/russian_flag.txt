@name Russian Flag
@persist I Scale
@trigger 

if(first()|dupefinished())
{

    Scale = 5
    
    Color1 = vec(255,255,255)
    Color2 = vec(0,57,166)
    Color3 = vec(213,43,30)

    # Flag
    
    # White 
        
    holoCreate(1)
    holoModel(1,"models/pac/jiggle/base_cloth_3.mdl")
    holoMaterial(1,"WTP/cloth_1")
    holoColor(1,Color1)
    holoAlpha(1,255)
    holoDisableShading(1,1)
    holoPos(1,entity():toWorld(vec(-0.5,0,65.57)))
    holoParent(1,entity())
    
    #Flag Bones
    
    holoBoneScale(1,0,vec(Scale,1,1))
    holoBoneScale(1,1,vec(Scale,1,1))
    holoBoneScale(1,2,vec(Scale,1,1))
    holoBoneScale(1,3,vec(Scale,1,1))
    holoBoneScale(1,4,vec(Scale,1,1))
    holoBoneScale(1,5,vec(Scale,1,1))
    holoBoneScale(1,6,vec(Scale,1,1))
    holoBoneScale(1,7,vec(Scale,1,1))
    holoBoneScale(1,8,vec(Scale,1,1))
    holoBoneScale(1,9,vec(Scale,1,1))
    
    holoClipEnabled(1, 1, 1)
    holoClip(1, 1, vec(0, 6.062, 0), vec(0, 90, 0), 0)
    
    # Blue
    
    holoCreate(2)
    holoModel(2,"models/pac/jiggle/base_cloth_3.mdl")
    holoMaterial(2,"WTP/cloth_1")
    holoColor(2,Color2)
    holoAlpha(2,255)
    holoDisableShading(2,1)
    holoPos(2,entity():toWorld(vec(-0.5,0,65.57)))
    holoParent(2,entity())
    
    #Flag Bones
    
    holoBoneScale(2,0,vec(Scale,1,1))
    holoBoneScale(2,1,vec(Scale,1,1))
    holoBoneScale(2,2,vec(Scale,1,1))
    holoBoneScale(2,3,vec(Scale,1,1))
    holoBoneScale(2,4,vec(Scale,1,1))
    holoBoneScale(2,5,vec(Scale,1,1))
    holoBoneScale(2,6,vec(Scale,1,1))
    holoBoneScale(2,7,vec(Scale,1,1))
    holoBoneScale(2,8,vec(Scale,1,1))
    holoBoneScale(2,9,vec(Scale,1,1))
    
    holoClipEnabled(2, 1, 1)
    holoClip(2, 1, vec(0, 6.062, 0), vec(0, -90, 0), 0)
    
    holoClipEnabled(2, 2, 1)
    holoClip(2, 2, vec(0, -6.062, 0), vec(0, 90, 0), 0)
    
    # Red
    
    holoCreate(3)
    holoModel(3,"models/pac/jiggle/base_cloth_3.mdl")
    holoMaterial(3,"WTP/cloth_1")
    holoColor(3,Color3)
    holoAlpha(3,255)
    holoDisableShading(3,1)
    holoPos(3,entity():toWorld(vec(-0.5,0,65.57)))
    holoParent(3,entity())
    
    #Flag Bones
    
    holoBoneScale(3,0,vec(Scale,1,1))
    holoBoneScale(3,1,vec(Scale,1,1))
    holoBoneScale(3,2,vec(Scale,1,1))
    holoBoneScale(3,3,vec(Scale,1,1))
    holoBoneScale(3,4,vec(Scale,1,1))
    holoBoneScale(3,5,vec(Scale,1,1))
    holoBoneScale(3,6,vec(Scale,1,1))
    holoBoneScale(3,7,vec(Scale,1,1))
    holoBoneScale(3,8,vec(Scale,1,1))
    holoBoneScale(3,9,vec(Scale,1,1))
    
    holoClipEnabled(3, 1, 1)
    holoClip(3, 1, vec(0, -6.062, 0), vec(0, -90, 0), 0)
    
    #Pole
    
    holoCreate(4)
    holoModel(4,"models/sprops/cylinders/size_1/cylinder_1_5x54.mdl")
    holoMaterial(4,"models/props_docks/dock01a")
    holoPos(4,entity():toWorld(vec(0,0,42.231)))
    holoScale(4,vec(0.6,0.6,1.6))
    holoParent(4,entity())
    
    #Pole Cap
    
    holoCreate(5)
    holoModel(5,"models/sprops/geometry/sphere_24.mdl")
    holoMaterial(5,"models/props_docks/dock01a")
    holoPos(5,entity():toWorld(vec(0,0,86)))
    holoScale(5,vec(0.075,0.075,0.075))
    holoParent(5,entity())

}

interval(100)

Speed = entity():vel():length()

I += Speed / 7

A = sin(I)*60

if(Speed > 1)
{
    holoAng(1,entity():toWorld(ang(0,A,90)))
    holoAng(2,entity():toWorld(ang(0,A,90)))
    holoAng(3,entity():toWorld(ang(0,A,90)))
}
else
{     
    holoAng(1,entity():toWorld(ang(0,0,90)))
    holoAng(2,entity():toWorld(ang(0,0,90)))
    holoAng(3,entity():toWorld(ang(0,0,90)))
}
