@name Ragdoll Troll Cam
@inputs [Ragdoll Driver]:entity DriverCamAngle:angle
@outputs ParentedEnt:entity RagdollPos:vector CamDistance
@persist [O Driver]:entity Bone:bone BoneId GravityOn Force_ Force ForceShift ForceAlt IsNoCollideAll
@persist ParentedEnt:entity ParentedBoneId ParentedOffSetPos:vector
if(first() | dupefinished()) {
    
    Force = 500
    ForceShift = 2000
    ForceAlt = 200
    
    CamDistance = 100
    
    O = owner()
    Driver = O
    #Driver = findPlayerByName("kiril")
    print(Driver)
    
    
    GravityOn = 1
    runOnKeys(Driver,1)
    
    function void updateDriverBone() {
        Bone = Ragdoll:bone(BoneId)
    }
    function void updateNoCollide() {
        noCollideAll(Ragdoll, IsNoCollideAll)
    }
    
}

interval(20)

if (~Driver) {
    runOnKeys(Driver,1)
}

if(changed(Ragdoll) & Ragdoll | ~Ragdoll)
{
    Ragdoll:ragdollGravity(GravityOn)
    
    local Bone_L_hand_id = Ragdoll:bone(7)
    local Bone_R_hand_id = Ragdoll:bone(5)
    local Bone_L_fot_id = Ragdoll:bone(13)
    local Bone_R_fot_id = Ragdoll:bone(14)
    local Bone_Body_id = Ragdoll:bone(1)
    local Bone_Head_id = Ragdoll:bone(10)
    local Bone_Ass_id = Ragdoll:bone(0)
    
    Bone_L_hand_id:setMass(3)
    Bone_R_hand_id:setMass(3)
    Bone_L_fot_id:setMass(10)
    Bone_R_fot_id:setMass(10)
    Bone_Body_id:setMass(5)
    Bone_Head_id:setMass(5)
    Bone_Ass_id:setMass(5)
    
    updateDriverBone()
    updateNoCollide()
    ParentedEnt = noentity()
}

if(changed(Driver:keyPressed("e")) & Driver:keyPressed("e")) {
    IsNoCollideAll = !IsNoCollideAll
    noCollideAll(Ragdoll, IsNoCollideAll)
}

#[
if(changed(Driver:keyPressed("g")) & Driver:keyPressed("g")) {
    Ragdoll:setModel("models/dog.mdl")
}
]#

if (ParentedEnt) {
    Ragdoll:bone(ParentedBoneId):setPos(ParentedEnt:toWorld(ParentedOffSetPos))
}

if (Driver:isPlayer()) {
    if(changed(Driver:keyPressed("t")) & Driver:keyPressed("t"))
    {
        GravityOn = !GravityOn
        Ragdoll:ragdollGravity(GravityOn)
        #[
        #findExcludePlayer(O)
        #findIncludeClass("player")
        #findIncludeClass("prop_ragdoll")
        findByClass("prop_ragdoll")
        #findByModel("models/player/skeleton.mdl")
        local F = findClosest(Driver:pos())
        #F:propStatic(1)
        #F:applyAngForce((ang(0,9999,0)))
        #F:propGravity(0)
        #F:setSkin(Driver:getSkin())
        #F:setBodygroup(2,2)
        local Dir = Driver:eye()
        F:setVel(Dir*500)
        #F:setPos(F:toWorld(vec(0,0,50)))
        #holoCreate(1,F:attachmentPos("eyes"))
        #holoParentAttachment(1,F,"eyes")
        #holoScale(1, vec(10))
        #F:applyForce(vec(0,0,1000))
        #print(Driver:pos())
        #print(F:pos())
        #print(F:getBodygroup())
        #timer("123", 1000)
        #F:ragdollGravity(0)
        ]#
    }
    
    if(Driver:keyPressed("1")) { BoneId = 0 updateDriverBone() }
    if(Driver:keyPressed("2")) { BoneId = 1 updateDriverBone() }
    if(Driver:keyPressed("3")) { BoneId = 10 updateDriverBone() }
    if(Driver:keyPressed("4")) { BoneId = 7 updateDriverBone() }
    if(Driver:keyPressed("5")) { BoneId = 5 updateDriverBone() }
    if(Driver:keyPressed("6")) { BoneId = 13 updateDriverBone() }
    if(Driver:keyPressed("7")) { BoneId = 14 updateDriverBone() }
    
    Force_ = (Driver:keyPressed("lalt") ? ForceAlt : Force)
    Force_ = (Driver:keyPressed("lshift") ? ForceShift : Force_)
    
    local ForceVec = vec()

    if(Driver:keyPressed("w")) {
        local Dir = DriverCamAngle:forward()
        ForceVec = Dir
    }
    if(Driver:keyPressed("s")) {
        local Dir = DriverCamAngle:forward() * -1
        ForceVec = (ForceVec + Dir):normalized()
    }
    if(Driver:keyPressed("a")) {
        local Dir = DriverCamAngle:right() * -1
        ForceVec = (ForceVec + Dir):normalized()
    }
    if(Driver:keyPressed("d")) {
        local Dir = DriverCamAngle:right()
        ForceVec = (ForceVec + Dir):normalized()
    }
    if(Driver:keyPressed("space")) {
        ForceVec = (ForceVec + vec(0,0,1)):normalized()
    }
    if(Driver:keyPressed("lcontrol")) {
        ForceVec = (ForceVec + vec(0,0,-1)):normalized()
    }
    
    if(Driver:keyPressed("mouse_left")) {
        foreach (I, B:bone = Ragdoll:bones()) {
            B:setVel(vec())
            #B:applyAngForce(B:angVel() * -1 * B:mass())
        }
        
    }
    if(changed(Driver:keyPressed("mouse_right")) & Driver:keyPressed("mouse_right")) {
        if (ParentedEnt) { ParentedEnt = noentity() }
        else {
            local Bone_R = Ragdoll:bone(BoneId)
            findExcludeEntities(array(Ragdoll, owner()))
            findInSphere(Bone_R:pos(), 100)
            local Driver = findClosest(Bone_R:pos())
            if (Driver) {
                ParentedEnt = Driver
                ParentedBoneId = BoneId
                ParentedOffSetPos = Driver:toLocal(Bone_R:pos())
            }
        }
    }
    if(changed(Driver:keyPressed("b")) & Driver:keyPressed("b")) {
        if (ParentedEnt) {
            Ragdoll:setPos(ParentedEnt:toWorld(ParentedOffSetPos))
        }
    }
    
    if (ForceVec != vec()) {
        Bone:setVel(ForceVec * Force_)
    }
}

RagdollPos = Ragdoll:pos()
