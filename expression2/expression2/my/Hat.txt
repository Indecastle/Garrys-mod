@name Hat
@inputs 
@outputs 
@persist [O EE B]:entity [Players OP]:table I

if(first()) {
    O = owner()
    EE = entity()
    timer("scan",10)
    EE:propNotSolid(1)
    
}

if (clk("scan")){
    O = owner()
    findByClass("player")
    Players=findToTable()
    if (Players:count()!=OP:count()){
        I=0
        EI=0
        timer("hat",10)
    }
    OP=Players
    timer("scan",10)
}

if(clk("hat")&(I<Players:count())) {
    if (clk("hat")&!I){propDeleteAll()}
    I++
    P=Players[I,entity]
    #P = findPlayerByName("Odin")
    if(P == findPlayerByName("Odin") | 1) {#print(P:name())
        #B = propSpawn("models/player/items/humans/top_hat.mdl", P:attachmentPos("eyes")+P:forward()*10,1)
        holoCreate(I, P:attachmentPos("eyes"), vec(1), P:attachmentAng("eyes"), vec(255), "models/player/items/humans/top_hat.mdl")
        holoPos(I,holoEntity(I):toWorld(vec(-3,0,-2)))
        holoParentAttachment(I,P,"eyes")
        holoVisible(I,P,0)
    }
    timer("hat",50)
}
