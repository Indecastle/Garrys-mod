@name CDU Camo net
@inputs Deploy
@persist Base:entity HoloDebug I Alpha UndeploySpeed Deployed Ang DeploySpeed Hide [Scale,Offset]:vector

if(holoModelAny()){
if(first()|dupefinished()){
#---Setup   

HoloDebug = 0
UndeploySpeed = fromUnit("km/h",2)
DeploySpeed = 6 #Different to UndeploySpeed this is how fast it pops up
Alpha = 255

Scale = vec(0.9,0.7,0.8) #Length, Width, Height

Offset = vec(0,0,15) #Offset


#---Setup finished

Base=entity():parent():parent()

#phoenix_storms/ps_grass
#models/props_foliage/ivy01
Mat = "phoenix_storms/ps_grass"

Deployed=1

#Holo maketh   
holoCreate(100,Base:toWorld(vec(0,0,45)),vec(1),Base:toWorld(ang(0,0,0)))
holoAlpha(100,HoloDebug)
I++
holoCreate(I,Base:toWorld(Offset+vec(110,0,10)*Scale),vec(3,1.3,2)*vec(Scale:z(),Scale:y(),Scale:x()),Base:toWorld(ang(-90,-180,0)),vec(255),"models/props_c17/awning001a.mdl")	
holoMaterial(I,Mat)
holoParent(I,100)
holoAlpha(I,Alpha)
I++
holoCreate(I,Base:toWorld(Offset+vec(-110,0,10)*Scale),vec(3,1.3,2)*vec(Scale:z(),Scale:y(),Scale:x()),Base:toWorld(ang(-90,-180,180)),vec(255),"models/props_c17/awning001a.mdl")	
holoMaterial(I,Mat)
holoParent(I,100)
holoAlpha(I,Alpha)
I++
holoCreate(I,Base:toWorld(Offset+vec(0,-110,10)*Scale),vec(3,1.3,2)*vec(Scale:z(),Scale:x(),Scale:y()),Base:toWorld(ang(-90,-180,-90)),vec(255),"models/props_c17/awning001a.mdl")	
holoMaterial(I,Mat)
holoParent(I,100)
holoAlpha(I,Alpha)
I++
holoCreate(I,Base:toWorld(Offset+vec(0,110,10)*Scale),vec(3,1.3,2)*vec(Scale:z(),Scale:x(),Scale:y()),Base:toWorld(ang(-90,-180,90)),vec(255),"models/props_c17/awning001a.mdl")	
holoMaterial(I,Mat)
holoParent(I,100)
holoAlpha(I,Alpha)
I++
holoCreate(I,Base:toWorld(Offset+vec(0,0,55)*Scale),vec(0.3,1,1.6)*vec(1,Scale:y(),Scale:x()),Base:toWorld(ang(-89,45,136)),Base:getColor(),"models/props_c17/fence04a.mdl")
holoMaterial(I,Mat)
holoParent(I,100)
holoAlpha(I,Alpha)
  
holoCreate(101,Base:toWorld(vec(0,0,0)),vec(1),Base:toWorld(ang(0,0,0)))
holoAlpha(101,HoloDebug)
   
holoCreate(102,Base:toWorld(vec(0,0,-45)),vec(1),Base:toWorld(ang(0,0,0)))
holoAlpha(102,HoloDebug)

holoParent(100,101)
holoParent(101,102)
holoParent(102,Base)

if(dupefinished()){for(H=1,I){holoAlpha(H,0)}}
}

if(!Deployed&!(Ang==180)){
    interval(80)
    Ang=clamp(Ang+DeploySpeed,0,180)
    holoAng(102,Base:toWorld(ang(0,0,Ang)))
    holoAng(101,Base:toWorld(ang(0,0,-Ang)))
    holoAng(100,Base:toWorld(ang(0,0,0))) 
}
elseif(Deployed&Ang){
    interval(80)
    Ang=clamp(Ang-DeploySpeed,0,180)
    holoAng(102,Base:toWorld(ang(0,0,Ang)))
    holoAng(101,Base:toWorld(ang(0,0,-Ang))) 
    holoAng(100,Base:toWorld(ang(0,0,0))) 
}
else{interval(1000)}


if(Base:vel():length()>UndeploySpeed){Deployed=0}
elseif(changed(Deploy)&Deploy){Deployed=!Deployed
    
if(Deployed){Hide=0,for (H=1,I){holoAlpha(H,Alpha)}}}

if(!Hide&!Deployed&Ang==180){Hide=1,for (H=1,I){holoAlpha(H,0)}}
}
else{print("Holomodel any is not applicable. This E2 wont work.")}


